---
title: "Bank A/B Comparison"
date: last-modified
format:
  html:
    toc: true
    toc-depth: 2
---

# Overview
This page documents the bank credit & spreads experiment for Milestone M4. Both runs use `run_id = 0` over a 200-tick horizon. The CSV and overlay below are generated via `python3 tools/generate_bank_ab.py` and report the metrics exported by `code/timing.py`.

Because the Decider stub currently returns deterministic fallbacks, the OFF and ON scenarios remain identical. We publish the artifacts now so prompt work can later drop in differentiated behaviour without restructuring the page.

## Core metrics
Table @tbl-bank-ab summarises the average spread, loan-to-output ratio, and credit-growth proxy for baseline (`OFF`) versus LLM-enabled (`ON`) runs. Values follow manuscript formatting (two decimals, comma separators for large magnitudes).

```{python}
#| label: tbl-bank-ab
#| tbl-cap: "Bank A/B metrics (run 0, 200 ticks)."
import pandas as pd
from pathlib import Path

source = Path("../data/bank/bank_ab_table.csv")
df = pd.read_csv(source)
ordered = (
    df.pivot(index="scenario", columns="metric", values="value")
      .reindex(["baseline", "llm_on"])
      [["avg_spread", "loan_output_ratio", "credit_growth"]]
      .rename(columns={
          "avg_spread": "Average spread",
          "loan_output_ratio": "Loan-to-output ratio",
          "credit_growth": "Credit growth proxy",
      })
)
formatted = ordered.applymap(lambda x: f"{x:,.2f}")
formatted
```

## Decision rationales
Table @tbl-bank-why compiles the why-codes returned by the credit decision service. It queries `data/bank/bank_ab_why.csv` when present and falls back to a stub note when live-mode metadata is unavailable.

```{python}
#| label: tbl-bank-why
#| tbl-cap: "Bank why-code distribution (run 0, 200 ticks)."
import pandas as pd
from pathlib import Path
from IPython.display import Markdown, display

why_path = Path("../data/bank/bank_ab_why.csv")
why_table = None

if not why_path.exists():
    display(Markdown("""::: {.callout-note}
No bank why-code data captured for this run. Launch the live Decider (M6-LIVE) to populate `data/bank/bank_ab_why.csv`.
:::
"""))
else:
    raw = pd.read_csv(why_path)
    if raw.empty or raw.get("count", pd.Series([0])).sum() <= 0:
        display(Markdown("""::: {.callout-note}
Bank why-code counts are zero, indicating the deterministic stub path. Run live prompts to populate the table.
:::
"""))
    else:
        table = raw.copy()
        if "scenario" not in table.columns or "why_code" not in table.columns:
            display(Markdown("""::: {.callout-warning}
Unexpected schema in `data/bank/bank_ab_why.csv`; expected `scenario`, `why_code`, `count`, and optional `share` columns.
:::
"""))
        else:
            table["scenario"] = table["scenario"].astype(str)
            table["why_code"] = table["why_code"].astype(str)
            if "count" in table.columns:
                table["count"] = pd.to_numeric(table["count"], errors="coerce").fillna(0).astype(int)
            else:
                table["count"] = 0
            if "share" in table.columns:
                table["share"] = pd.to_numeric(table["share"], errors="coerce")
            else:
                totals = table.groupby("scenario")["count"].transform(lambda s: s.sum() if s.sum() > 0 else 0)
                table["share"] = table["count"].where(totals > 0, other=0) / totals.replace({0: pd.NA})
            table["share"] = table["share"].fillna(0)
            scenario_labels = {
                "baseline": "Baseline (OFF)",
                "llm_on": "LLM ON",
            }
            table["Scenario"] = table["scenario"].map(scenario_labels).fillna(table["scenario"].str.title())
            table["Why code"] = table["why_code"]
            table["Decisions"] = table["count"]
            table["Share"] = table["share"].map(lambda x: f"{x * 100:.1f}%")
            cols = ["Scenario", "Why code", "Decisions", "Share"]
            table = table[cols].sort_values(["Scenario", "Decisions"], ascending=[True, False])
            why_table = table.reset_index(drop=True)

if why_table is not None:
    why_table
```

## Average-spread overlay
Figure @fig-bank-ab overlays the OFF and ON average-spread series. The OFF path is dashed, the ON path is solid, and the final 50 ticks are shaded to match the manuscript comparison window.

![Bank average spread overlay (OFF dashed, ON solid; final 50 ticks shaded)](../figs/bank/bank_ab_overlay.png){#fig-bank-ab}

## Notes
- Artifact paths: `data/bank/bank_ab_table.csv`, `figs/bank/bank_ab_overlay.png`.
- Credit growth remains elevated because total credit starts close to zero; the stub behaviour leads to identical OFF/ON values. Future prompt iterations should revisit the metric once live decisions are in place.
